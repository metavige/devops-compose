

# Redis 快取服務 - 自包含配置
# 可以獨立啟動: docker-compose up -d
# 包含 Redis + Redis Commander 管理界面

services:
  redis:
    image: redis:${REDIS_VERSION:-7-alpine}
    container_name: redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass "${REDIS_PASSWORD:-redis123}"
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.tcp.routers.redis.rule=HostSNI(`redis.${MY_DOMAIN:-docker.internal}`)'
      - 'traefik.tcp.routers.redis.entrypoints=redis'
      - 'traefik.tcp.routers.redis.service=redis'
      - 'traefik.tcp.services.redis.loadbalancer.server.port=6379'

    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis Commander - Redis 管理界面
  redis-commander:
    image: rediscommander/redis-commander:${REDIS_COMMANDER_VERSION:-latest}
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.redis-commander.rule=Host(`redis-ui.${MY_DOMAIN:-docker.internal}`)'
      - 'traefik.http.routers.redis-commander.entrypoints=websecure'
      - 'traefik.http.routers.redis-commander.tls=true'
      - 'traefik.http.services.redis-commander.loadbalancer.server.port=8081'
    depends_on:
      - redis

volumes:
  redis_data:
    external: true
    name: redis_data

networks:
  default:
    external: true
    name: ${DEFAULT_NETWORK:-devops}
